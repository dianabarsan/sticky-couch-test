global
  maxconn 4096
  lua-load /usr/local/etc/haproxy/parse_basic.lua
  lua-load /usr/local/etc/haproxy/parse_cookie.lua
  lua-load /usr/local/etc/haproxy/replace_password.lua
  log /dev/log len 65535 local2 info

defaults
  mode http
  log global
  option dontlognull
  option http-ignore-probes
  timeout client 150000
  timeout server 3600000
  timeout connect 15000
  stats enable
  stats refresh 30s
  stats auth $COUCHDB_USER:$COUCHDB_PASSWORD
  stats uri /haproxy?stats

frontend http-in
  bind  $HAPROXY_IP:$HAPROXY_PORT
  acl has_user req.hdr(x-medic-user) -m found
  acl has_cookie req.hdr(cookie) -m found
  acl has_basic_auth req.hdr(authorization) -m found
  declare capture request len 400000
  http-request set-header x-medic-user %[lua.parseBasic] if has_basic_auth
  http-request set-header x-medic-user %[lua.parseCookie] if !has_basic_auth !has_user has_cookie
  http-request capture req.body id 0 # capture.req.hdr(0)
  http-request capture req.hdr(user) len 200 # capture.req.hdr(1)
  capture response header Content-Length len 10 # capture.res.hdr(0)
  log-format "%ci,%s,%[capture.req.hdr(1)],%ST,%[capture.req.method],%[capture.req.uri],%[capture.req.hdr(1)],'%[capture.req.hdr(0),lua.replacePassword]',%B,%Tr,%[capture.res.hdr(0)]"
  default_backend couchdb-servers

backend couchdb-servers
  # balance leastconn
  stick-table type string len 32 size 30k expire 60m
  stick on req.hdr(user)
  server couchdb1 $COUCHDB1_SERVER:5984 check inter 2s
  server couchdb2 $COUCHDB2_SERVER:5984 check inter 2s
  server couchdb3 $COUCHDB3_SERVER:5984 check inter 2s
